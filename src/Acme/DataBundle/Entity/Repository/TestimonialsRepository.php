<?php

namespace Acme\DataBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * TestimonialsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TestimonialsRepository extends EntityRepository {

  public function truncateTestimonials() {

    $conn = $this->getEntityManager()->getConnection(); //create a connection with your DB
    $sql = 'TRUNCATE testimonials';
    $stmt = $conn->prepare($sql); //prepare your sql

    return $stmt->execute();//execute your sql
  }

	public function getTestimonials($storeId = '') {

		$qb = $this->getEntityManager()->createQueryBuilder();
  	$qb->select('testimonials.id AS id, testimonials.name AS name, testimonials.starRating AS starRating, testimonials.description AS description');
  	$qb->from('AcmeDataBundle:Testimonials', 'testimonials');

    if($storeId) {
      $qb->where('testimonials.stores = :storeId');
      $qb->setParameter('storeId', $storeId);
    }

    $qb->orderBy('id', 'ASC');

    return $qb->getQuery()->getArrayResult();

	}

  public function getRandomTestimonials() {

    $conn = $this->getEntityManager()->getConnection(); //create a connection with your DB

    $sql = "SELECT testimonials.id AS id, testimonials.name AS name, testimonials.starRating AS starRating, testimonials.description AS description, testimonials.stores_id AS storeId FROM testimonials ORDER BY RAND() LIMIT 2"; //your SQL Query

    $stmt = $conn->prepare($sql); //prepare your sql
    $stmt->execute(); //execute your sql
    $result = $stmt->fetchAll(); //fetch your result

    return $result;

  }

}
